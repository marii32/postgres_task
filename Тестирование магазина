План тестирования интернет-магазина
Проект: Разработка и выпуск веб-приложения интернет-магазина
Роль: QA-инженер
Сроки:
	•Альфа-версия – через 2 недели
	•Финальный релиз – через 3 месяца
	•Поддержка – 1 месяц

Разделение на этапы
Этап 1: Подготовительный (2 недели)
Действия:
	1.Анализ требований и спецификации. Проверка на полноту и согласованность.
		Проверка описания функциональных и нефункциональных требований, соответствия макетов дизайна требованиям, логики системы(анализ возможных сценариев)
		Пример: проверить, что есть описание всех основных модулей(каталог, корзина, оформление заказа, оплата, доставка), указаны все состояния системы(успешная покупка, ошибка платежа, отмена заказа), описаны граничные случаи
	2.Разработка стратегии тестирования. 
		Определение видов тестирования, уровней, объемов. Написание чек-листов, тест-планов, тест-кейсов (пока на высоком уровне)
		Пример: в данном случае будут определены следующие уровни тестирования(сейчас речь идет только о планировании):
			•Модульное: отдельные функции, например, корректность расчета стоимости заказа и скидок
			•Интеграционное тестирование: взаимодействие между модулями, например, работа корзины с оформлением заказа
			•Системное тестирование: проверка сценариев использования
			•Приемочное: проводится с участием пользователей
	3.Оценка трудоемкости тестирования.
		Пример: для проекта были определены такие сроки:
			•Подготовительный этап (2 недели)
			•Тестирование альфа-версии (2–4 недели)
			•Бета-тестирование и подготовка к релизу (6–12 недель)
			•Поддержка после релиза(1 месяц)
	4.Настройка тестовой среды: подготовка данных, доступ к тестовым серверам
		Пример: настройка версий ПО, заполнение БД тестовыми данными
	5.Определение критериев приемки для каждого этапа разработки.
	Артефакты:
		•Mind map функционала
		•Юзеркейсы
		•Тестовые учетные записи (логины/пароли)
		•Заполненная тестовая база данных
		•Настроенный тестовый сервер
		•Тестовые сценарии
		•Тест-план
		•Предварительный список тест-кейсов
	Ресурсы:
		•Figma (проверка макета сайта)
		•Astah (работа с юзеркейсами)
		•Confluence / Notion (документация).
		•Jira (таск-менеджмент).
		•TestRail(ведение тест-кейсов)
		•Docker(развертывание тестовой среды)

Этап 2: Тестирование альфа-версии (2–4 недели)
	1.Функциональное тестирование (2-3 недели)
		Действия:
		•Smoke-тестирование
			Пример: регистрация нового пользователя, поиск товара по ключевым словам, добавление/удаление товара корзины, выбор способа оплаты при заказе, просмотр истории заказов
		•Основное функциональное тестирование (ручное и автоматизированное, если возможно, не забывать о негативных сценариях)
			Пример: Оплата -  позитивный: выбрать оплат картой и ввести корректные данные, негативный: ввести невалидные данные карты
			Дополнительные примеры проверки:
			•Проверка каталога товаров: корректность загрузки, фильтрации, сортировки.
			•Проверка корзины: добавление, удаление, обновление количества товаров.
			•Оформление заказа: ввод данных, расчет итоговой суммы, проверка бизнес-логики.
			•Выбор способа доставки и оплаты.
			•Тестирование API 
	2.Юзабилити-тестирование: оценка удобства интерфейса, юзабилити-исследование.
		Пример: проверка соответствия сайта правилу трех кликов
	Артефакты:
		•Тест-кейсы
		•Чек-листы
		•Отчеты о тестировании
		•Лог-файлы
	Ресурсы:
		•Postman (API-тесты)
		•Jira (таск-менеджмент)
		•BrowserStack (кросс-браузерное тестирование)
		•Google Lighthouse (скорость и доступность).
	3.Нагрузочное тестирование (1-2 недели)
		Действия:
		•Тестирование под нагрузкой (определение предельных значений)
		•Анализ скорости работы сайта, профилирование производительности
	Артефакты:
		•Тест-кейсы
		•Чек-листы
		•Отчеты о тестировании
		•Лог-файлы
	Ресурсы:
		•JMeter (эмуляция нагрузки от множества пользователей)
		•Selenium  (автоматизация)

Этап 3: Бета-тестирование и подготовка к релизу (6-12 недели)
	1.Регрессионное тестирование (2 недели)
		Действия:
		•Повторное тестирование основных функций после исправления багов
		•Проверка исправлений по баг-трекингу
		•Перепроверка критических путей (checkout, оплата, поиск товаров)
		•Повторное кросс-браузерное тестирование
	2.Тестирование безопасности (1 неделя)
		Действия:
		•Проверка SQL-инъекций, XSS, CSRF
		•Тестирование с ограниченными правами пользователей
		•Проверка на возможность обхода системы оплаты или скидок
	3.Предрелизное тестирование (2 недели)
		Действия:
		•Финальное тестирование системы на прод-окружении
		•Тестирование на реальных данных, реальных платежных системах
		•Оценка соответствия требованиям
		•Подготовка отчетности и финального тест-плана
	Артефакты:
		•Отчеты о регрессионном тестировании 
		•Чек-листы по безопасности 
	Ресурсы:
		•OWASP ZAP / Burp Suite(автоматизированные сканеры безопасности)
		•SQLmap(тестирование на SQL-инъекции)
		•Postman(API-тестирование)
		•Jira(таск-менеджмент)

Этап 4: Пострелизное тестирование и поддержка (1 месяц)
	1.Мониторинг системы и анализ метрик
		Действия:
		•Отслеживание багов от пользователей
		•Анализ логов (ошибки серверной и клиентской части)
		•Мониторинг производительности под реальной нагрузкой
	2.Доработка и улучшение тестовой документации
		Действия:
		•Обновление чек-листов и тест-кейсов на основе новых данных
		•Разработка новых тестов для найденных критических ошибок
	Артефакты:
		•Отчеты о найденных багах
		•Лог-файлы ошибок
	Ресурсы:
		•Sentry(автоматический сбор ошибок)
		•Grafana(мониторинг логов)
