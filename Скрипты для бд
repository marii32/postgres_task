Задание по основам баз данных

1. Установка PostgreSQL в Docker
docker search postgres – поиск образа в Docker Hub
docker pull postgres – загрузка postgres
docker run -d -p 5432:5432 --name academy-db -e POSTGRES_PASSWORD=****** postgres – запуск контейнера
docker exec -it academy-db psql -U postgres– подключение к PostgresSQL  внутри контейнера

2. CREATE DATABASE academy; - создание Базы Данных

3.	Сущность студент:
CREATE TABLE Students(
s_id SERIAL PRIMARY KEY,
name VARCHAR(100) NOT NULL,
start_year INT NOT NULL);
	
	Сущность курс:
CREATE TABLE Courses(
c_no SERIAL PRIMARY KEY,
title VARCHAR(200) NOT NULL,
hours INT CHECK (hours > 0));

	Сущность экзамен:
CREATE TABLE Exams(
s_id INT NOT NULL,
c_no INT NOT NULL,
score INT NOT NULL CHECK (score BETWEEN 2 AND 5),
FOREIGN KEY(s_id) REFERENCES Students(s_id),
FOREIGN KEY(c_no) REFERENCES Courses(c_no),
PRIMARY KEY(s_id, c_no));


4. Заполнение таблиц
INSERT INTO Students (name, start_year) VALUES
('Иван Иванов', 2022),
('Мария Петрова', 2023),
('Алексей Смирнов', 2024);


INSERT INTO Courses (title, hours) VALUES
('Математика', 60),
('Физика', 50),
('Программирование', 80);


INSERT INTO Exams (s_id, c_no, score) VALUES
(1, 1, 5), 
(1, 2, 4), 
(2, 1, 3), 
(2, 3, 5), 
(3, 2, 2), 
(3, 3, 4);

5. Студенты, не сдававшие экзамены (студент не сдал ни одного экзамена, если о нем нет записей, либо если все его оценки — двойки)
SELECT s.name
FROM Students s
LEFT JOIN Exams e ON s.s_id = e.s_id
GROUP BY s.s_id, s.name
HAVING COUNT(e.s_id) = 0  
   OR MAX(e.score) = 2; 

6. Средний балл по предметам с убыванием
SELECT c.title, AVG(ex.score) AS average_score
FROM Courses c
JOIN Exams ex ON c.c_no = ex.c_no
GROUP BY c.title
ORDER BY average_score DESC;

7. Наполнение бд производилось на Java с помощью java.sql
Программа находится в репозитории


